type BookSeries implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  parent: BaseDocType
  parentfield: String
  parenttype: String
  idx: Int
  docstatus: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  title: String!
  slug: String
}

enum BookSeriesSortField {
  NAME
  CREATION
  MODIFIED
  TITLE
  SLUG
}

input BookSeriesSortingInput {
  direction: SortDirection!
  field: BookSeriesSortField!
}

type BookSeriesCountableEdge {
  cursor: String!
  node: BookSeries!
}

type BookSeriesCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [BookSeriesCountableEdge!]!
}

extend type Query {
  ABookSeries(name: String!): BookSeries!
  BookSeries(filter: [DBFilterInput], sortBy: BookSeriesSortingInput, before: String, after: String, first: Int, last: Int): BookSeriesCountableConnection!
}
